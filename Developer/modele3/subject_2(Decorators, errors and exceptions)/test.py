#–∑–∞–¥–∞—á–∞ 1
'''
–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –≤–≤–æ–¥ –¥–≤—É—Ö –∑–Ω–∞—á–µ–Ω–∏–π. –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∏–∑ –Ω–∏—Ö –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º,
—Ç–æ –¥–æ–ª–∂–Ω–∞ –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è, —Ç–æ –µ—Å—Ç—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, —Å—Ç—Ä–æ–∫. –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –≤–≤–µ–¥–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞ —Å—É–º–º–∏—Ä—É—é—Ç—Å—è.

–ü—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã:

–ü–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: 4
–í—Ç–æ—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: 5
–†–µ–∑—É–ª—å—Ç–∞—Ç: 9.0
–ü–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: a
–í—Ç–æ—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: 9
–†–µ–∑—É–ª—å—Ç–∞—Ç: a9
'''
a = input('–ü–µ—Ä–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ')
b = input('–í—Ç–æ—Ä–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ')
try:
    a = float(a)
    b = float(b)
    print('–†–µ–∑—É–ª—å—Ç–∞—Ç:', a + b)
except ValueError:
    print(str(a) + str(b))
    print(f'–ë—ã–ª–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è {a} –∏ {b}')
else:
    print(f'–í—Å–µ –≤–µ—Ä–Ω–æ, –≤—ã –≤–≤–µ–ª–∏ —á–∏—Å–ª–∞ {a} –∏ {b}')
finally:
    print('–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')

#–∑–∞–¥–∞—á–∞ 2
'''
–§—É–Ω–∫—Ü–∏—è plus_two() –≤—ã–ø–æ–ª–Ω—è–µ—Ç –æ–¥–Ω—É –ø—Ä–æ—Å—Ç—É—é –∑–∞–¥–∞—á—É ‚Äî –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–ª–æ–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –≤ –Ω–µ–µ —á–∏—Å–ª–∞ 2 –∏ –∑–Ω–∞—á–µ–Ω–∏—è 
–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π number. –í –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é number –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–æ —á–∏—Å–ª–æ. –û–±—Ä–∞–±–æ—Ç–∞–π—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é, –µ—Å–ª–∏ –≤ —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –∫–∞–∫–æ–≥–æ-—Ç–æ –¥—Ä—É–≥–æ–≥–æ —Ç–∏–ø–∞. –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –Ω–∞–ø–µ—á–∞—Ç–∞–π—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ ¬´–û–∂–∏–¥–∞–µ–º—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö ‚Äî —á–∏—Å–ª–æ!¬ª.

–ó–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–¥ –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –∫–æ–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏.

–ü–æ–¥—Å–∫–∞–∑–∫–∞:
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é try/except.–í –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–∏—Å–∫–∞ —Ä–µ—à–µ–Ω–∏—è –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—É–º–º—É —Å—Ç—Ä–æ–∫–∏ –∏ —á–∏—Å–ª–∞, –∏–∑—É—á–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.–í Python –µ—Å—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è —Å–∏—Ç—É–∞—Ü–∏–∏, –µ—Å–ª–∏ —Ç–∏–ø –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º.

–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: 2
5
–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: —Ü–∞—É–º–∫
–û–∂–∏–¥–∞–µ–º—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö ‚Äî —á–∏—Å–ª–æ!
'''

def plus_two(number):
    # –≤ number –æ–∂–∏–¥–∞–µ—Ç—Å—è —á–∏—Å–ª–æ
    # –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ –¥–æ–ª–∂–Ω–∞ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å—Å—è –æ—à–∏–±–∫–∞
    try:
        print(2 + number)
    except TypeError:
        print('–û–∂–∏–¥–∞–µ–º—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö ‚Äî —á–∏—Å–ª–æ!')

plus_two(3)
plus_two("3") 

#–∑–∞–¥–∞—á–∞ 2.1

def plus_two(number):
    # –≤ number –æ–∂–∏–¥–∞–µ—Ç—Å—è —á–∏—Å–ª–æ
    # –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ –¥–æ–ª–∂–Ω–∞ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å—Å—è –æ—à–∏–±–∫–∞
    try:
        print(2 + int(number))
    except ValueError:
        print('–û–∂–∏–¥–∞–µ–º—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö ‚Äî —á–∏—Å–ª–æ!')


plus_two(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))

#–∑–∞–¥–∞—á–∞ 3
'''
–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ä–∞–∑–¥–µ–ª—É –¥–∞–≤–∞–π—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤. –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å —Å–≤–æ–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –¥–∞–ª–µ–µ –º—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–Ω–µ–µ —É–∂–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ —É—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–ª–∏.

import functools
def decorator(func):
    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        # –î–µ–ª–∞–µ–º —á—Ç–æ-—Ç–æ –¥–æ
        val = func(*args, **kwargs)
        # –î–µ–ª–∞–µ–º —á—Ç–æ-—Ç–æ –ø–æ—Å–ª–µ
        return val
    return wrapper
    
–¢–∞–π–º–µ—Ä
–î–µ–∫–æ—Ä–∞—Ç–æ—Ä —Ç–∞–π–º–µ—Ä –ø–æ–º–æ–∂–µ—Ç –∏–∑–º–µ—Ä–∏—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–∑–æ–≤–æ–≤ –≤–∞—à–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–æ—Å—Ç—ã–º –∏ —è–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º. 
–°–ª–µ–¥—É—é—â–∏–π –ø—Ä–∏–º–µ—Ä –∫–æ–¥–∞ –ø—Ä–∏–º–µ–Ω–∏–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–µ –∏ –ø—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥–µ Profiling –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π.
'''

import functools
import time

def timer(func):
    @functools.wraps(func)
    def _wrapper(*args, **kwargs):
        start = time.perf_counter()
        result = func(*args, **kwargs)
        runtime = time.perf_counter() - start
        print(f"{func.__name__} took {runtime:.4f} secs")
        return result
    return _wrapper

@timer
def complex_calculation(a, b):
    """Some complex calculation."""
    time.sleep(0.5)
    return a * b

print(complex_calculation(int((input())), (int(input()))))

'''
–í–∏–¥–Ω–æ, —á—Ç–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä timer –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–∞–∫–æ–π-—Ç–æ –∫–æ–¥ –¥–æ –∏ –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. 
–í –æ—Å—Ç–∞–ª—å–Ω–æ–º –∂–µ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ—á–Ω–æ —Ç–∞–∫ –∂–µ, –∫–∞–∫ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, 
—Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —Ä–∞–∑–¥–µ–ª–µ. –ù–æ –ø—Ä–∏ –µ–≥–æ –Ω–∞–ø–∏—Å–∞–Ω–∏–∏ –º—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –∏ –∫–æ–µ-—á–µ–º –Ω–æ–≤—ã–º.
'''

#–∑–∞–¥–∞—á–∞ 4
'''
–ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤
–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤ –∫ —Ñ—É–Ω–∫—Ü–∏–∏, ‚Äú–Ω–∞–∫–ª–∞–¥—ã–≤–∞—è‚Äù –∏—Ö –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞. 
–î–∞–≤–∞–π—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏–º –¥–≤–∞ –ø—Ä–æ—Å—Ç—ã—Ö –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö –æ–±–∞ –¥–ª—è –æ–¥–Ω–æ–π —Ü–µ–ª–µ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
'''
import functools
def greet(func):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º."""
    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        val = func(*args, **kwargs)
        return "Hello " + val + "!"
    return wrapper
def flare(func):
    """–ö–æ–µ-—á—Ç–æ –¥–æ–±–∞–≤–∏–º –≤ –Ω–∞—à—É —Å—Ç—Ä–æ–∫—É."""
    @functools.wraps(func)
    def wrapper(*args, **kwargs):
        val = func(*args, **kwargs)
        return "üéâ " + val + " üéâ"
    return wrapper
@flare
@greet
def getname(name):
    return name
print(getname(input()))

'''
–î–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ –ø–æ—Ä—è–¥–∫–µ —Å–Ω–∏–∑—É –≤–≤–µ—Ä—Ö. –°–Ω–∞—á–∞–ª–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä greet, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É, 
–≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–æ–º—É —Ñ—É–Ω–∫—Ü–∏–µ–π getname, –∞ –∑–∞—Ç–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ greet –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–æ–¥—É flare. 
–°—Ç–µ–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞ –≤—ã—à–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å—Ç–∏–ª–µ –ø–µ—Ä–µ–ø–∏—Å–∞–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º –≤–∏–¥–µ: flare(greet (getname (name))). 
–°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–æ—Ä—è–¥–æ–∫ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ, —á—Ç–æ –ø–æ–ª—É—á–∏—Ç—Å—è!
'''

#–∑–∞–¥–∞—á–∞ 5
'''
–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
–¢–æ—á–Ω–æ —Ç–∞–∫ –∂–µ, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ —Å –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º —Ç–∞–π–º–µ—Ä–∞, –º—ã –º–æ–∂–µ–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞, 
–∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –µ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –µ–≥–æ —Ä–∞–±–æ—Ç—ã —è –Ω–∞–ø–∏—Å–∞–ª –ª–æ–≥–≥–µ—Ä, 
–≤—ã–∑—ã–≤–∞–µ–º—ã—Ö –≤ —Ö–æ–¥–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: –º–µ—Ç–∫—É —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, 
–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –≤ —Ñ—É–Ω–∫—Ü–∏—é –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
'''

import functools
from datetime import datetime


def logexc(func):
    @functools.wraps(func)
    def wrapper(*args, **kwargs):

        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å—Ç—Ä–æ–∫—É –∏–º–µ–Ω–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è
        args_rep = [repr(arg) for arg in args]
        kwargs_rep = [f"{k}={v!r}" for k, v in kwargs.items()]
        sig = ", ".join(args_rep + kwargs_rep)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±–ª–æ–∫ Try –¥–ª—è –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å
        try:
            return func(*args, **kwargs)
        except Exception as e:
            print("Time: ", datetime.now().strftime("%Y-%m-%d [%H:%M:%S]"))
            print("Arguments: ", sig)
            print("Error:\n")
            raise

    return wrapper


@logexc
def divint(a, b):
    return a / b

print(divint(1, 0))

#–∑–∞–¥–∞—á–∞ 6
'''
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é-–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç (–∑–∞–∫–µ—à–∏—Ä—É–µ—Ç) –∑–Ω–∞—á–µ–Ω–∏–µ –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ï—Å–ª–∏ –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ —Å —Ç–µ–º–∏ –∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ ‚Äî –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–µ –≤—ã–ø–æ–ª–Ω—è—è —Ñ—É–Ω–∫—Ü–∏—é.

–ü–æ–¥—Å–∫–∞–∑–∫–∞: –°–æ–∑–¥–∞–π—Ç–µ —Å–ª–æ–≤–∞—Ä—å –∏ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –≤ –Ω—ë–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∑–∞–¥–µ–∫–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏. –ü—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ, –Ω–µ –±—ã–ª–æ –ª–∏ —É–∂–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞. –ï—Å–ª–∏ –±—ã–ª ‚Äî –≤–µ—Ä–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ—à–ª–æ–≥–æ –≤—ã–∑–æ–≤–∞, –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ ‚Äî –≤–µ—Ä–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Å–ª–æ–≤–∞—Ä—å. –ö–ª—é—á–æ–º –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ —Å–ª–æ–≤–∞—Ä—è –º–æ–∂–µ—Ç –±—ã—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç –¥–µ–∫–æ—Ä–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏."
'''
import time
from functools import wraps


def time_check(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        start_time = time.time()
        result = func(*args, **kwargs)
        execution_time = round(time.time() - start_time, 1)
        print(f'–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ {func.__name__}: {execution_time} —Å.')
        return result

    return wrapper

cache = {}
def cache_args(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        if args not in cache:
            cache[args] = func(*args, **kwargs)
        return cache[args]
    return wrapper


@time_check
@cache_args
def long_heavy(num):
    time.sleep(1)
    return num * 2


print(long_heavy(1))
# –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ long_heavy: 1.0 —Å.
# 2
print(long_heavy(2))
# –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ long_heavy: 0.0 —Å.
# 2
print(long_heavy(3))
# –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ long_heavy: 1.0 —Å.
# 4
print(long_heavy(4))
# –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ long_heavy: 0.0 —Å.
# 4
print(long_heavy(4))
# –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ long_heavy: 0.0 —Å.
# 4

#–∑–∞–¥–∞—á–∞ 7
'''
import requests

res = requests.get('https://ya.ru')
response = requests.request('GET', 'https://ya.ru/get')
print(res.status_code, response.status_code)

print('–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–π –∏–∑ URL,–≤—ã–≤–æ–¥ —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏')
try:
    response = requests.get('https://ya.ru.ru')
    print(response.status_code)
except Exception as error:
    #–í—ã–≤–µ—Å—Ç–∏ –æ—à–∏–±–∫—É
    print(error)
else:
    print(response.status_code, response.content)
'''


